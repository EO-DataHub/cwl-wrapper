$graph:
- class: Workflow
  doc: Main stage manager
  id: stage-manager
  inputs:
  - id: test
    type: string
  - id: csa
    type: string
  - id: teststring
    type: string
  - doc: EO product for vegetation index
    id: input_reference
    label: EO product for vegetation index
    stac:catalog:
      stac:collection: input_reference
    type: Directory[]
  - doc: EO product for vegetation index
    id: casale_me
    label: EO product for vegetation index
    stac:catalog:
      stac:collection: input_reference
    type: Directory[]
  label: theStage
  outputs:
    wf_outputs:
      outputSource:
      - node_stage_out/wf_outputs_out
      type:
        items: Directory
        type: array
    wf_outputs3:
      outputSource:
      - node_stage_out_1/wf_outputs3_out
      type: Directory[]
  requirements:
    ScatterFeatureRequirement: {}
    SubworkflowFeatureRequirement: {}
  steps:
    node_stage_in:
      in:
        input_reference: input_reference
        test: test
      out:
      - input_reference_out
      run:
        baseCommand: stage-in
        class: CommandLineTool
        id: stagein
        inputs:
          input_reference:
            inputBinding:
              position: 1
            type: string[]
        outputs:
          input_reference_out:
            outputBinding:
              glob: .
            type: Directory
        requirements:
          EnvVarRequirement:
            envDef:
              PATH: /opt/anaconda/envs/env_stagein/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          ResourceRequirement: {}
      scatter: input_reference
      scatterMethod: dotproduct
    node_stage_in_1:
      in:
        casale_me: casale_me
      out:
      - casale_me_out
      run:
        baseCommand: stage-in
        class: CommandLineTool
        id: stagein
        inputs:
          casale_me:
            inputBinding:
              position: 1
            type: string[]
        outputs:
          casale_me_out:
            outputBinding:
              glob: .
            type: Directory
        requirements:
          EnvVarRequirement:
            envDef:
              PATH: /opt/anaconda/envs/env_stagein/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          ResourceRequirement: {}
      scatter: casale_me
      scatterMethod: dotproduct
    node_stage_out:
      in:
        wf_outputs: on_stage/wf_outputs
      out:
      - wf_outputs_out
      run:
        baseCommand: echo
        class: CommandLineTool
        doc: casale
        inputs:
          wf_outputs:
            inputBinding:
              position: 1
            type: string[]
        outputs:
          wf_outputs_out:
            outputBinding:
              glob: .
            type: Directory
        stderr: outerr.txtcc
        stdout: output.txtcc
      scatter: wf_outputs
      scatterMethod: dotproduct
    node_stage_out_1:
      in:
        wf_outputs3: on_stage/wf_outputs3
      out:
      - wf_outputs3_out
      run:
        baseCommand: echo
        class: CommandLineTool
        doc: casale
        inputs:
          wf_outputs3:
            inputBinding:
              position: 1
            type: string[]
        outputs:
          wf_outputs3_out:
            outputBinding:
              glob: .
            type: Directory
        stderr: outerr.txtcc
        stdout: output.txtcc
      scatter: wf_outputs3
      scatterMethod: dotproduct
    on_stage:
      in:
        casale_me: node_stage_in_1/casale_me_out
        csa: csa
        input_reference: node_stage_in/input_reference_out
        teststring: teststring
      out:
      - wf_outputs
      - wf_outputs3
      run: '#vegetation-index'
- baseCommand: vegetation-index
  class: CommandLineTool
  hints:
    DockerRequirement:
      dockerPull: terradue/vegetation-index:1.0
  id: clt
  inputs:
    inp1:
      inputBinding:
        position: 1
        prefix: --input_reference
      type: Directory
    inp2:
      inputBinding:
        position: 2
        prefix: --aoi
      type: string
  outputs:
    results:
      outputBinding:
        glob: .
      type: Any
  requirements:
    EnvVarRequirement:
      envDef:
        PATH: /opt/anaconda/envs/env_nbr/bin:/opt/anaconda/envs/env_nbr/bin:/opt/anaconda/envs/env_default/bin:/opt/anaconda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        PREFIX: /opt/anaconda/envs/env_nbr
    ResourceRequirement: {}
- class: Workflow
  doc: Vegetation index processor
  id: vegetation-index
  inputs:
  - id: csa
    type: string
  - id: teststring
    type: string
  - doc: EO product for vegetation index
    id: input_reference
    label: EO product for vegetation index
    stac:catalog:
      stac:collection: input_reference
    type: Directory[]
  - doc: EO product for vegetation index
    id: casale_me
    label: EO product for vegetation index
    stac:catalog:
      stac:collection: input_reference
    type: Directory[]
  label: Vegetation index
  outputs:
  - id: wf_outputs
    outputSource:
    - node_1/results
    type:
      items: Directory
      type: array
  - id: wf_outputs3
    outputSource:
    - node_1/results
    type: Directory[]
  requirements:
  - class: ScatterFeatureRequirement
  steps:
    node_1:
      in:
        inp1: input_reference
        inp2: aoi
      out:
      - results
      run: '#clt'
      scatter: inp1
      scatterMethod: dotproduct
stac: http://www.me.net/stac/cwl/extension
